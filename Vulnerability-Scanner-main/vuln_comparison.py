import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

def visualize_vulnerability_types(vuln_data, top_n=10):
    """
    Visualize the top N most common vulnerability types using a horizontal bar chart.

    Parameters:
    vuln_data (list of dicts or DataFrame): List containing dictionaries or a DataFrame with a 'vulnerability_type' column.
    top_n (int): Number of top vulnerability types to display.
    """
    # Convert to DataFrame if not already
    if not isinstance(vuln_data, pd.DataFrame):
        vuln_data = pd.DataFrame(vuln_data)
    
    plt.figure(figsize=(12, 8))

    # Get the top N vulnerability types
    type_counts = vuln_data['vulnerability_type'].value_counts().head(top_n)

    # Create horizontal bar plot
    ax = type_counts.plot(kind='barh', color=sns.color_palette("viridis", len(type_counts)))

    plt.title(f'Top {top_n} Vulnerability Types', fontsize=16)
    plt.xlabel('Number of Occurrences', fontsize=14)
    plt.ylabel('Vulnerability Type', fontsize=14)

    # Add value labels
    for i, v in enumerate(type_counts):
        ax.text(v + 0.1, i, str(v), va='center', fontsize=12)

    plt.tight_layout()
    plt.savefig('vulnerability_types.png', dpi=300)
    plt.show()

# ðŸ”½ Example usage with sample data:
sample_vulnerabilities = [
    {'vulnerability_type': 'SQL Injection'},
    {'vulnerability_type': 'Cross-Site Scripting'},
    {'vulnerability_type': 'SQL Injection'},
    {'vulnerability_type': 'Cross-Site Request Forgery'},
    {'vulnerability_type': 'Remote Code Execution'},
    {'vulnerability_type': 'Directory Traversal'},
    {'vulnerability_type': 'SQL Injection'},
    {'vulnerability_type': 'Remote Code Execution'},
    {'vulnerability_type': 'Cross-Site Scripting'},
    {'vulnerability_type': 'Authentication Bypass'},
    {'vulnerability_type': 'Remote Code Execution'},
    {'vulnerability_type': 'Path Disclosure'},
    {'vulnerability_type': 'Cross-Site Scripting'},
    {'vulnerability_type': 'Directory Traversal'},
    {'vulnerability_type': 'SQL Injection'}
]

# Call the function
visualize_vulnerability_types(sample_vulnerabilities, top_n=7)
